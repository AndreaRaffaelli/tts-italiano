---
- name: Create virtual environment
  ansible.builtin.command: python{{ python_version }} -m venv {{ venv_path }}
  args:
    creates: "{{ venv_path }}/bin/activate"
  become: true
  become_user: "{{ ansible_user }}"

- name: Upgrade pip in virtual environment
  ansible.builtin.pip:
    name: pip
    state: present
    version: latest
    virtualenv: "{{ venv_path }}"
    virtualenv_python: python{{ python_version }}
  become: true
  become_user: "{{ ansible_user }}"

- name: Check if requirements.txt exists in src directory
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/../src/{{ requirements_file }}"
  register: requirements_stat
  become: true
  become_user: "{{ ansible_user }}"
  delegate_to: localhost

- name: Check if requirements.txt exists in current directory
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/{{ requirements_file }}"
  register: requirements_current_stat
  become: true
  become_user: "{{ ansible_user }}"
  delegate_to: localhost
  when: not requirements_stat.stat.exists

- name: Check if requirements.txt exists in destination directory
  ansible.builtin.stat:
    path: "/home/{{ ansible_user }}/{{ destination_dir | default('speecht5_processing') }}/{{ requirements_file }}"
  register: requirements_remote_stat
  become: true
  become_user: "{{ ansible_user }}"

- name: Install Python dependencies with requirements.txt (CUDA)
  ansible.builtin.include_tasks: install_with_requirements_cuda.yml
  when:
    - (requirements_stat.stat.exists or requirements_current_stat.stat.exists or requirements_remote_stat.stat.exists)
    - (python_env_type | default('cpu')) == 'cuda'

- name: Install Python dependencies with requirements.txt (CPU)
  ansible.builtin.include_tasks: install_with_requirements.yml
  when:
    - (requirements_stat.stat.exists or requirements_current_stat.stat.exists or requirements_remote_stat.stat.exists)
    - (python_env_type | default('cpu')) == 'cpu'

- name: Install default Python dependencies (CUDA)
  ansible.builtin.include_tasks: install_default_dependencies_cuda.yml
  when:
    - not (requirements_stat.stat.exists or requirements_current_stat.stat.exists or requirements_remote_stat.stat.exists)
    - (python_env_type | default('cpu')) == 'cuda'

- name: Install default Python dependencies (CPU)
  ansible.builtin.include_tasks: install_default_dependencies.yml
  when:
    - not (requirements_stat.stat.exists or requirements_current_stat.stat.exists or requirements_remote_stat.stat.exists)
    - (python_env_type | default('cpu')) == 'cpu'

- name: Add virtual environment activation to .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias speecht5='source {{ venv_path }}/bin/activate'"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
